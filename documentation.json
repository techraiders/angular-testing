{
    "pipes": [],
    "interfaces": [
        {
            "name": "Book",
            "id": "interface-Book-a4df4b90c0d68ed0169d12ea0c10ec8f477e6e5ac83f7c0f6d551f72925d4f867a527ddee7b059bd53faba39ebe12ff1ee3c5d761f83171609e044aad884df16",
            "file": "src/app/books/books.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, RouterModule } from '@angular/router';\r\n\r\nexport interface Book {\r\n  id: number;\r\n  title: string;\r\n  author: string;\r\n}\r\n\r\n@Component({\r\n  imports: [FormsModule, CommonModule, RouterModule],\r\n  selector: 'app-books',\r\n  templateUrl: './books.component.html',\r\n  styleUrls: ['./books.component.css'],\r\n  standalone: true\r\n})\r\nexport class BooksComponent implements OnInit {\r\n  books: Book[] = [];\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.books = this.route.snapshot.data['books'];\r\n  }\r\n\r\n  editingBook: Book | null = null;\r\n\r\n  editBook(book: Book): void {\r\n    this.editingBook = { ...book };\r\n  }\r\n\r\n  saveBook(book: Book): void {\r\n    const index = this.books.findIndex(b => b.id === book.id);\r\n    if (index !== -1) {\r\n      this.books[index] = this.editingBook!;\r\n      this.editingBook = null;\r\n    }\r\n  }\r\n\r\n  deleteBook(book: Book): void {\r\n    this.books = this.books.filter(b => b.id !== book.id);\r\n  }\r\n}",
            "properties": [
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-c765990b45552d0597238f26a8c080ff7f54419825bc76761fcf1b5c388b45b2896eabec1981def6cfbe04535d799d328d81effaa37c74b1bdc0b4eff34bbc4e",
            "file": "src/app/auth/auth.service.ts",
            "properties": [
                {
                    "name": "authenticated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getUsers",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private authenticated = false;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login() {\r\n    this.authenticated = true;\r\n  }\r\n\r\n  logout() {\r\n    this.authenticated = false;\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return this.authenticated;\r\n  }\r\n\r\n  getUsers() {\r\n    return this.http.get('https://jsonplaceholder.typicode.com/users');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "BooksService",
            "id": "injectable-BooksService-8d72be44d50661a506cfaea89239f31c99496f7f8188e8a229d8aa8334679a2c675b9edbabf554c357b8ba771741f240b8af2b46b282feaa292ac2b35a63f93a",
            "file": "src/app/books/books.service.ts",
            "properties": [
                {
                    "name": "books",
                    "defaultValue": "BOOKS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Book[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getBooks",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Book[]>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Book } from './books.component';\r\nimport { BOOKS } from './books-data';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BooksService {\r\n  private books: Book[] = BOOKS;\r\n\r\n  getBooks(): Observable<Book[]> {\r\n    return of(this.books);\r\n  }\r\n}",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-3da927f176b6fd700e025204c13544f889acbbb2ad3387dd526bbfd91215c19ddb87b606ddc94b081192707d5e41304f4df366d564ce67f6d76c156bfe95e38b",
            "file": "src/app/auth/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n\tif (this.authService.isAuthenticated()) {\r\n\t\treturn true;\r\n\t} \r\n\telse {\r\n\t  this.router.navigate(['/login']);\r\n\t  return false;\r\n\t}\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        },
        {
            "name": "BooksResolver",
            "id": "injectable-BooksResolver-414c04ee9d4de129c32711fd621d36c3b702d9149f7e01845d6122eeebc61231a230ca5b24f5d3fb11ebdf1758cb497cdd0f99c4c201b02b640e2b7506c7ffda",
            "file": "src/app/books/books-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Book[]>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Book } from './books.component';\r\nimport { BooksService } from './books.service';\r\n\r\n@Injectable({\r\n    providedIn: `root`\r\n})\r\nexport class BooksResolver implements Resolve<Book[]> {\r\n  constructor(private booksService: BooksService) {}\r\n\r\n  resolve(): Observable<Book[]> {\r\n    return this.booksService.getBooks();\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "booksService",
                        "type": "BooksService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "booksService",
                        "type": "BooksService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "HeaderInterceptor",
            "id": "injectable-HeaderInterceptor-5bb774e660f68ecec3f7ad474644c33511bf9658ed788f25e45ebb0417f6688cb933fb1e8166d1efb503393df39459869b015a73d460c9396066a637e08c5a70",
            "file": "src/app/auth/http-interceptor.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HeaderInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const headers = req.headers.set('Content-Type', 'application/json');\r\n    let authReq = req.clone({ headers });\r\n    authReq = authReq.clone({\r\n      headers: authReq.headers.set(\r\n        'Authorization',\r\n        'Bearer ' + localStorage.getItem('token')\r\n      ),\r\n    });\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "type": "interceptor"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-aea51079d1b255adaafc5528ebec4ff5409cabfd6c2de4ffbd051b75ea9d7ca431f6583143a90e4985dc5be2351ab0b12f3a455b151556bb5991b754ce00677e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-testing'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-testing';\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"main\">\r\n  <div class=\"content\">\r\n    <router-outlet />\r\n  </div>\r\n</main>"
        },
        {
            "name": "BooksComponent",
            "id": "component-BooksComponent-a4df4b90c0d68ed0169d12ea0c10ec8f477e6e5ac83f7c0f6d551f72925d4f867a527ddee7b059bd53faba39ebe12ff1ee3c5d761f83171609e044aad884df16",
            "file": "src/app/books/books.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-books",
            "styleUrls": [
                "./books.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./books.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "books",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Book[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "editingBook",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Book | null",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteBook",
                    "args": [
                        {
                            "name": "book",
                            "type": "Book",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "book",
                            "type": "Book",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editBook",
                    "args": [
                        {
                            "name": "book",
                            "type": "Book",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "book",
                            "type": "Book",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveBook",
                    "args": [
                        {
                            "name": "book",
                            "type": "Book",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "book",
                            "type": "Book",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, RouterModule } from '@angular/router';\r\n\r\nexport interface Book {\r\n  id: number;\r\n  title: string;\r\n  author: string;\r\n}\r\n\r\n@Component({\r\n  imports: [FormsModule, CommonModule, RouterModule],\r\n  selector: 'app-books',\r\n  templateUrl: './books.component.html',\r\n  styleUrls: ['./books.component.css'],\r\n  standalone: true\r\n})\r\nexport class BooksComponent implements OnInit {\r\n  books: Book[] = [];\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.books = this.route.snapshot.data['books'];\r\n  }\r\n\r\n  editingBook: Book | null = null;\r\n\r\n  editBook(book: Book): void {\r\n    this.editingBook = { ...book };\r\n  }\r\n\r\n  saveBook(book: Book): void {\r\n    const index = this.books.findIndex(b => b.id === book.id);\r\n    if (index !== -1) {\r\n      this.books[index] = this.editingBook!;\r\n      this.editingBook = null;\r\n    }\r\n  }\r\n\r\n  deleteBook(book: Book): void {\r\n    this.books = this.books.filter(b => b.id !== book.id);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 20px 0;\r\n  font-size: 18px;\r\n  text-align: left;\r\n}\r\n\r\nthead tr {\r\n  background-color: #f2f2f2;\r\n  color: #333;\r\n  text-align: left;\r\n  font-weight: bold;\r\n}\r\n\r\nth, td {\r\n  padding: 12px 15px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\ntbody tr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  margin: 0 5px;\r\n  border: none;\r\n  background-color: #007bff;\r\n  color: white;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\ninput {\r\n  padding: 5px;\r\n  font-size: 16px;\r\n}",
                    "styleUrl": "./books.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Title</th>\r\n      <th>Author</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let item of books\">\r\n      <td *ngIf=\"!editingBook || item.id !== editingBook.id\">{{ item.title }}</td>\r\n      <td *ngIf=\"editingBook && item.id === editingBook.id\"> <input type=\"text\" name=\"title\" id=\"title\" [(ngModel)]=\"editingBook.title\"> </td>\r\n      \r\n      <td *ngIf=\"!editingBook || item.id !== editingBook.id\">{{ item.author }}</td>\r\n      <td *ngIf=\"editingBook && item.id === editingBook.id\"> <input type=\"text\" name=\"author\" id=\"author\" [(ngModel)]=\"editingBook.author\"> </td>\r\n      <td>\r\n        <button *ngIf=\"!editingBook || item.id !== editingBook.id\" (click)=\"editBook(item)\">Edit</button>\r\n        <button *ngIf=\"editingBook && item.id === editingBook.id\" (click)=\"saveBook(item)\">Save</button>\r\n        <button (click)=\"deleteBook(item)\">Delete</button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-aa05f86af32fe1a61dbe56b553dbf302d9f89e341ddd8bc555f5554de7bc52fd8323a2e1d54c488a1c5f02884ef74224076330a87a9de7827ebf534603f57fd4",
            "file": "src/app/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getUsers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.css',\r\n})\r\nexport class LoginComponent {\r\n  constructor (private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit () {\r\n    this.getUsers();\r\n  }\r\n\r\n  login () {\r\n    this.authService.login();\r\n    this.router.navigate(['/books']);\r\n  }\r\n\r\n  logout () {\r\n    this.authService.logout();\r\n  }\r\n\r\n  getUsers () {\r\n    this.authService.getUsers().subscribe((users) => {\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./login.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<button type=\"button\" (click)=\"login()\">LOGIN</button>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideHttpClient(withInterceptorsFromDi()),\r\n    provideRouter(ROUTES),\r\n    { provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true },\r\n  ],\r\n}"
            },
            {
                "name": "BOOKS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/books-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { id: 1, title: 'To Kill a Mockingbird', author: 'Harper Lee' },\r\n  { id: 2, title: '1984', author: 'George Orwell' },\r\n  { id: 3, title: 'The Great Gatsby', author: 'F. Scott Fitzgerald' },\r\n  { id: 4, title: 'The Catcher in the Rye', author: 'J.D. Salinger' },\r\n  { id: 5, title: 'Moby-Dick', author: 'Herman Melville' }\r\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideHttpClient(withInterceptorsFromDi()),\r\n    provideRouter(ROUTES),\r\n    { provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true },\r\n  ],\r\n}"
                }
            ],
            "src/app/books/books-data.ts": [
                {
                    "name": "BOOKS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/books-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { id: 1, title: 'To Kill a Mockingbird', author: 'Harper Lee' },\r\n  { id: 2, title: '1984', author: 'George Orwell' },\r\n  { id: 3, title: 'The Great Gatsby', author: 'F. Scott Fitzgerald' },\r\n  { id: 4, title: 'The Catcher in the Rye', author: 'J.D. Salinger' },\r\n  { id: 5, title: 'Moby-Dick', author: 'Herman Melville' }\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/http-interceptor.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HeaderInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/books/books-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BOOKS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/books-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "BooksResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/books/books.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BooksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/books/books.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Book",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/books/books.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BooksService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}